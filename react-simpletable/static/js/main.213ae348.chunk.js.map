{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["Table","state","selected","selectedIndex","page","size","componentDidMount","this","loadRemoteData","props","newPage","fetch","formatUrl","resp","res","URL","parseRemote","t","data","total","getData","render","Array","className","styles","onClick","c","i","onHeaderClick","key","obj","onSelect","index","url","colSpan","type","Math","value","onChange","e","onBlur","onKeyDown","readOnly","React","Component","val","ex","console","getFromFormat","RemoteTable","Col","name","header","format","airline","LocalTable","useState","current","setCurrent","local","row","style","border","backgroundColor","fontWeight","JSON","stringify","App","margin","maxWidth","href","target","rel","fontSize","borderTop","marginTop","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.213ae348.chunk.js","sourcesContent":["import React from 'react'\r\nimport styles from './styles.module.css'\r\n\r\nexport default class Table extends React.Component {\r\n  state = { selected: null, selectedIndex: -1, page: 1, size: 25 };\r\n\r\n  componentDidMount() {\r\n    this.loadRemoteData();\r\n  }\r\n\r\n  loadRemoteData(newPage) {\r\n    if (!this.props.url)\r\n      return;\r\n\r\n    const page = newPage || this.state.page;\r\n    const state = { ...this.state, page };\r\n    this.setState(state);\r\n\r\n    fetch(this.formatUrl(this.props.url, state))\r\n      .then(resp => this.parseRemote(resp, state));\r\n  }\r\n\r\n  formatUrl(url, state) {\r\n    const res = new URL(url);\r\n    res.searchParams.set('page', state.page - 1);\r\n    res.searchParams.set('size', state.size);\r\n\r\n    return res;\r\n  }\r\n\r\n  parseRemote(resp, state) {\r\n    resp.json()\r\n      .then(t => this.setState({ data: t.data, total: t.totalPages, page: state.page }));\r\n  }\r\n\r\n  getData() {\r\n    return this.props.data\r\n      ? this.props.data\r\n      : this.state.data\r\n  }\r\n\r\n  render() {\r\n    const data = this.getData() || [];\r\n    if (!Array.isArray(data))\r\n      throw 'Property DATA is not an array';\r\n\r\n    const onSelect = (obj, i) => {\r\n      this.setState({ selected: obj, selectedIndex: i });\r\n      if (this.props.onSelect)\r\n        this.props.onSelect(obj, i);\r\n    };\r\n\r\n    const onHeaderClick = (c, i) => {\r\n      if (this.props.onHeaderClick)\r\n        this.props.onHeaderClick(c.props.name, i);\r\n    };\r\n\r\n    return <section className={'simpletable ' + styles.simpletable}>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {React.Children.map(this.props.children, (c, i) =>\r\n              <th onClick={() => onHeaderClick(c, i)}>\r\n                {c.props.header || ' '}\r\n              </th>\r\n            )}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((obj, index) =>\r\n            <tr key={index} onClick={() => onSelect(obj, index)} className={this.state.selectedIndex === index ? styles.active : null}>\r\n              {React.Children.map(this.props.children, c => React.cloneElement(c, { obj, index }))}\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        {this.props.url && <tfoot>\r\n          <tr>\r\n            <th colSpan={this.props.children?.length || 1}>\r\n              <button type=\"button\" onClick={() => this.loadRemoteData(1)}>&lt;&lt;</button>\r\n              <button type=\"button\" onClick={() => this.loadRemoteData(Math.max(1, this.state.page - 1))}>&lt;</button>\r\n              <input type=\"text\" value={this.state.page}\r\n                onChange={e => this.setState({ page: e.target.value })}\r\n                onBlur={() => this.loadRemoteData()}\r\n                onKeyDown={e => e.key === 'Enter' && this.loadRemoteData(e.target.value)}\r\n              />\r\n                /\r\n              <input type=\"text\" value={this.state.total || 0} readOnly />\r\n              <button type=\"button\" onClick={() => this.loadRemoteData(Math.min(this.state.total, this.state.page + 1))}>&gt;</button>\r\n              <button type=\"button\" onClick={() => this.loadRemoteData(this.state.total)}>&gt;&gt;</button>\r\n            </th>\r\n          </tr>\r\n        </tfoot>}\r\n      </table>\r\n    </section>;\r\n  }\r\n}\r\n\r\nTable.Col = props => {\r\n  const getFromFormat = obj => {\r\n    try {\r\n      return props.format(props.obj, props.index);\r\n    } catch (ex) {\r\n      console.warn('Error format column ' + props.name);\r\n      console.warn(ex);\r\n      return '';\r\n    }\r\n  }\r\n\r\n  const val = props.format\r\n    ? getFromFormat()\r\n    : (props.obj || {})[props.name] || '';\r\n\r\n  return <td>{val}</td>;\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-simpletable';\r\nimport 'react-simpletable/dist/index.css';\r\nimport local from './local.json';\r\n\r\nconst RemoteTable = () => {\r\n  return <>\r\n    <h2>Table from remote data</h2>\r\n    <p>This is example from use of url property for table load data with\r\n      a remote request (using fetch api) and automatically control pagination.</p>\r\n\r\n    <Table url=\"https://api.instantwebtools.net/v1/passenger\">\r\n      <Table.Col name=\"_id\" header=\"#\" />\r\n      <Table.Col name=\"name\" header=\"Name\" />\r\n      <Table.Col name=\"trips\" header=\"Trips\" />\r\n      <Table.Col header=\"Last flight\"\r\n        format={obj => (obj.airline[0] || obj.airline).name} />\r\n    </Table>\r\n  </>;\r\n}\r\n\r\nconst LocalTable = () => {\r\n  const [current, setCurrent] = React.useState();\r\n  const data = local.data;\r\n\r\n  return <>\r\n    <h2>Table from local data</h2>\r\n    <p>This is example from use of data property for fill table\r\n      and onSelect event.</p>\r\n\r\n    <Table data={data} onSelect={row => setCurrent(row)}>\r\n      <Table.Col name=\"_id\" header=\"#\" />\r\n      <Table.Col name=\"name\" header=\"Name\" />\r\n      <Table.Col name=\"trips\" header=\"Trips\" />\r\n      <Table.Col header=\"Last flight\"\r\n        format={obj => (obj.airline[0] || obj.airline).name} />\r\n    </Table>\r\n    <p style={{ border: '1px solid #c8e1ff', backgroundColor: '#f1f8ff' }}>\r\n      <span style={{fontWeight: 'bold'}}>Current selection:</span> {JSON.stringify(current)}\r\n    </p>\r\n  </>;\r\n}\r\n\r\nconst App = () =>\r\n  <main style={{ margin: '0 auto', maxWidth: 800 }}>\r\n    <h1>react-simpletable examples</h1>\r\n    <p>This is a list of simple examples of using react-simpletable.</p>\r\n    <p>Projected hosted at <a href=\"https://github.com/hesenger/react-simpletable\" target=\"_blank\" rel=\"noreferrer\">GitHub</a>.</p>\r\n\r\n    <LocalTable />\r\n\r\n    <RemoteTable />\r\n    <footer style={{ fontSize: '.8em', borderTop: '1px solid #ccc', marginTop: '10em' }}>\r\n      <p>Examples avaiable in <a href=\"https://github.com/hesenger/react-simpletable/tree/main/example\" target=\"_blank\" rel=\"noreferrer\">GitHub</a>\r\n      </p>\r\n    </footer>\r\n  </main>;\r\n\r\nexport default App;\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}